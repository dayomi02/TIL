### Spring Cloud Gateway

spring을 기반으로 api를 구축하는 데 사용되는 gateway. 클라이언트와 서비스 사이에 통신을 관리하는 역할을 함.

## spring cloud gateway & eureka

### Spring cloud gateway

API Gateway 역할을 수행. API Gateway는 클라이언트 요청을 다양한 마이크로서비스로 라우팅하고, 로드 밸런싱, 인증, 모니터링 등의 기능을 제공함.

- 라우팅: 클라이언트 요청을 특정 마이크로서비스로 전달
- 필터링: 요청/응답 전후로 다양한 처리를 할 수 있음 (인증, 로깅, CORS 처리 등)
- 로드 밸런싱: 여러 인스턴스에 걸쳐 트래픽을 분배
- 보안: 인증 및 권한 관리
- 모니터링 및 트래픽 관리: 요청을 모니터링하고, 트래픽을 관리
- SSL 지원: HTTPS 요청 처리

클라이언트가 여러 마이크로서비스에 분산된 요청을 할 때, 이를 중앙화된 게이트웨이를 통해 관리하고 싶을 때 사용.

인증, 로깅, 모니터링 등 공통 기능을 하나의 진입점에서 처리하고자 할 때 사용.

### Eureak

서비스 디스커버리 도구. 마이크로서비스 아키텍쳐에서 각 서비스가 동적으로 자신을 등록하고, 다른 서비스가 해당 서비스 위치를 찾을 수 있도록 도움.

- 서비스 등록 및 검색: 각 마이크로서비스가 자신을 Eureka 서버에 등록하고, 다른 서비스가 이를 조회하여 통신
- 동적 스케일링 지원: 서비스가 동적으로 추가되거나 제거될 때 자동으로 고나리
- 헬스 체크: 등록된 서비스의 상태를 지속적으로 확인하고, 문제가 있는 서비스는 클러스터에서 제거

마이크로서비스가 많고, 이들이 동적으로 스케일링되거나 IP주소가 자주 변경될 때 사용.

서비스를 하드코딩된 위치 대신 동적으로 검색하고 싶을 때 사용.

### 차이점

- 목적
    
    spring cloud gateway는 api gateway로서 요청 라우팅 및 처리에 집중하고, eureka는 서비스 디스커버리를 담당
    
- 역할
    
    spring cloud gateway는 클라이언트와 서비스 간의 중앙 통로를 제공하고, eureka는 서비스들이 서로를 찾을 수 있게 함
    
- 사용 위치
    
    spring cloud gateway는 주로 클라이언트 요청을 처리하는 진입점에서 사용되고, eureka는 마이크로서비스 간 통신을 위해 사용됨
    

### 출처

https://spring.io/projects/spring-cloud-gateway
